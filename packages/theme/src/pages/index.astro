---
import { type CollectionEntry, getCollection } from "astro:content";
import SocialList from "@/components/SocialList.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import Note from "@/components/note/Note.astro";
import { getAllPosts } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";

// Get the current site language from env
const SITE_LANG = import.meta.env.SITE_LANG || 'en';

// Get home page content
const homeContent = await getCollection('page', ({ id }) => {
  return id === `${SITE_LANG}/pages/home`;
});
const home = homeContent[0];

if (!home) {
  throw new Error(`Home page content not found for language: ${SITE_LANG}`);
}

// Get the rendered HTML content
const homeHTML = home.rendered?.html || home.body || '';

// Posts
const MAX_POSTS = 10;
const allPosts = await getAllPosts();
const allPostsByDate = allPosts
  .sort(collectionDateSort)
  .slice(0, MAX_POSTS) as CollectionEntry<"post">[];

// Pinned Posts, set to a max of 3;
const MAX_PINNED_POSTS = 3;
const pinnedPosts = allPostsByDate
  .filter((p) => p.data.pinned)
  .slice(0, MAX_PINNED_POSTS);

// Notes
const MAX_NOTES = 5;
const allNotes = await getCollection("note");
const latestNotes = allNotes.sort(collectionDateSort).slice(0, MAX_NOTES);
---

<PageLayout meta={{ title: "Home" }}>
  <section class="section">
    <h1 class="section__title section__title--large">
      {home.data.title}
    </h1>
    <div class="prose" set:html={homeHTML} />
    <!-- <SocialList /> -->
  </section>
  {
    pinnedPosts.length > 0 && (
      <section class="section">
        <h2 class="section__title">{home.data.pinnedPostsTitle || "Pinned Posts"}</h2>
        <ul class="list" role="list">
          {pinnedPosts.map((p) => (
            <li class="list-item">
              <PostPreview post={p} />
            </li>
          ))}
        </ul>
      </section>
    )
  }
  <section class="section">
    <h2 class="section__title"><a href="/posts/">{home.data.postsTitle || "Posts"}</a></h2>
    <ul class="list" role="list">
      {
        allPostsByDate.map((p) => (
          <li class="list-item">
            <PostPreview post={p} />
          </li>
        ))
      }
    </ul>
  </section>
  {
    latestNotes.length > 0 && (
      <section class="section">
        <h2 class="section__title">
          <a href="/notes/">{home.data.notesTitle || "Notes"}</a>
        </h2>
        <ul class="list list--spaced" role="list">
          {latestNotes.map((note) => (
            <li>
              <Note note={note} as="h3" isPreview />
            </li>
          ))}
        </ul>
      </section>
    )
  }
</PageLayout>
