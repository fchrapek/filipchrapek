---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post"> | CollectionEntry<"artykul">;
	withDesc?: boolean;
};

const { as: Tag = "div", post, withDesc = false } = Astro.props;

// Determine the base path based on collection
const basePath = post.collection === "artykul" ? "/artykuly/" : "/posts/";
---

<FormattedDate
	class="post-preview__date"
	date={post.data.publishDate}
/>
<Tag>
	{post.data.draft && <span class="post-preview__draft-label">(Draft) </span>}
	<a class="post-preview__link" href={`${basePath}${post.id}/`}>
		{post.data.title}
	</a>
</Tag>
{withDesc && <q class="post-preview__description">{post.data.description}</q>}
